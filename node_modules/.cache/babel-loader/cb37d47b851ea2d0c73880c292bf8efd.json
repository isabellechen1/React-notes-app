{"ast":null,"code":"var _jsxFileName = \"/Users/isabellechen/notes-app/src/components/Sidebar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sidebar(props) {\n  _s();\n\n  const noteElements = props.notes.map((note, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `title ${note.id === props.currentNote.id ? \"selected-note\" : \"\"}`,\n      onClick: () => props.setCurrentNoteId(note.id),\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-snippet\",\n        children: note.body.split(\"\\n\")[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"delete-btn\",\n        onClick: event => props.deleteNote(event, note.id),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"gg-trash trash-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this)\n  }, note.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this));\n  const [darkMode, setDarkMode] = React.useState(true);\n\n  function toggleDarkMode() {\n    setDarkMode(prevMode => !prevMode);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"pane sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar--header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggler\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"toggler--light\",\n          children: \"Light\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggler--slider\",\n          onClick: toggleDarkMode,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toggler--slider--circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"toggler--dark\",\n          children: \"Dark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-note\",\n        onClick: props.newNote,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), noteElements]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Sidebar, \"U9cQrERlY+h8pHe8i/lj95QawrI=\");\n\n_c = Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/Users/isabellechen/notes-app/src/components/Sidebar.js"],"names":["React","Sidebar","props","noteElements","notes","map","note","index","id","currentNote","setCurrentNoteId","body","split","event","deleteNote","darkMode","setDarkMode","useState","toggleDarkMode","prevMode","newNote"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACnC,QAAMC,YAAY,GAAGD,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,kBACjC;AAAA,2BACI;AAEI,MAAA,SAAS,EAAG,SACRD,IAAI,CAACE,EAAL,KAAYN,KAAK,CAACO,WAAN,CAAkBD,EAA9B,GAAmC,eAAnC,GAAqD,EACxD,EAJL;AAKI,MAAA,OAAO,EAAE,MAAMN,KAAK,CAACQ,gBAAN,CAAuBJ,IAAI,CAACE,EAA5B,CALnB;AAAA,8BAOI;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,kBAA8BF,IAAI,CAACK,IAAL,CAAUC,KAAV,CAAgB,IAAhB,EAAsB,CAAtB;AAA9B;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AACI,QAAA,SAAS,EAAC,YADd;AAEI,QAAA,OAAO,EAAGC,KAAD,IAAWX,KAAK,CAACY,UAAN,CAAiBD,KAAjB,EAAwBP,IAAI,CAACE,EAA7B,CAFxB;AAAA,+BAII;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,KAAUF,IAAI,CAACE,EAAf;AAAA;AAAA;AAAA;AAAA,UADiB,CAArB;AAoBA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BhB,KAAK,CAACiB,QAAN,CAAe,IAAf,CAAhC;;AAEA,WAASC,cAAT,GAAyB;AACrBF,IAAAA,WAAW,CAACG,QAAQ,IAAI,CAACA,QAAd,CAAX;AACH;;AAED,sBACI;AAAS,IAAA,SAAS,EAAC,cAAnB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,SAAS,EAAC,iBADd;AAEI,UAAA,OAAO,EAAED,cAFb;AAAA,iCAII;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAQI;AAAG,UAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAYI;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAA6B,QAAA,OAAO,EAAEhB,KAAK,CAACkB,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAeKjB,YAfL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GA9CuBF,O;;KAAAA,O","sourcesContent":["import React from \"react\"\n\nexport default function Sidebar(props) {\n    const noteElements = props.notes.map((note, index) => (\n        <div key={note.id}>\n            <div\n                \n                className={`title ${\n                    note.id === props.currentNote.id ? \"selected-note\" : \"\"\n                }`}\n                onClick={() => props.setCurrentNoteId(note.id)}\n            >\n                <h4 className=\"text-snippet\">{note.body.split(\"\\n\")[0]}</h4>\n                <button \n                    className=\"delete-btn\"\n                    onClick={(event) => props.deleteNote(event, note.id)}\n                >\n                    <i className=\"gg-trash trash-icon\"></i>\n                </button>\n            </div>\n        </div>\n    ))\n\n    const [darkMode, setDarkMode] = React.useState(true)\n\n    function toggleDarkMode(){\n        setDarkMode(prevMode => !prevMode)\n    }\n\n    return (\n        <section className=\"pane sidebar\">\n            <div className=\"sidebar--header\">\n                <h3>Notes</h3>\n                <div className=\"toggler\" >\n                    <p className=\"toggler--light\">Light</p>\n                    <div \n                        className=\"toggler--slider\"\n                        onClick={toggleDarkMode}\n                    >\n                        <div className=\"toggler--slider--circle\"></div>\n                    </div>\n                    <p className=\"toggler--dark\">Dark</p>\n                </div>\n                <button className=\"new-note\" onClick={props.newNote}>+</button>\n            </div>\n            {noteElements}\n        </section>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}